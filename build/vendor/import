#!/bin/sh

print_usage() {
    cat << EOF
usage: $0 dependency-name

Vendors pristine dependency sources from github in src/third_party.

Override default behavior by setting these environment variables:
  - pkg_clone_flags: extra flags for 'git clone' (e.g. '--recursive')

Examples:
  - Vendor libressl
    - ./build/vendor/import libressl
EOF
}

set -e
if [ $# -ne 1 ]; then
    print_usage
    exit 1
fi
pkg_rootdir=$(cd $(dirname $(dirname $(dirname $0))) && pwd -P)
cd $pkg_rootdir
# Note that the spec has access to $pkg_rootdir
. build/spec/$1
if [ "$pkg_vendor_dir" = "" ]; then
    echo "FATAL: $pkg_name is not a vendored third_party dependency" 1>&2
    exit 1
fi
rm -rf $pkg_vendor_dir
if [ "$pkg_repository" != "" ]; then
    git clone $pkg_clone_flags --single-branch --depth 2                   \
        --branch $pkg_branch_or_tag $pkg_repository $pkg_vendor_dir
    cd $pkg_vendor_dir
    pkg_vendor_repo_short=`echo $pkg_repository|sed 's/https:\/\/github.com\///g'`
    if [ "$pkg_tip" != "" ]; then
        if [ "`git rev-parse HEAD`" != "$pkg_tip" ]; then
            # Mainly because this allows us to know which commit was the
            # tip of the branch when we compiled a dependency
            echo "FATAL: unexpected HEAD commit SHA-1" 1>&2
            exit 1
        fi
        pkg_vendor_src="${pkg_repository}@${pkg_tip}"
    else
        pkg_vendor_src="${pkg_repository}@${pkg_branch_or_tag}"
    fi
    rm -rf $pkg_vendor_dir/.git
elif [ "$pkg_tarball_url" != "" -a "$pkg_signify_key" != "" -a \
       "$pkg_checksum_url" != "" ]; then
    pkg_vendor_src="verified ${pkg_tarball_url}"
    pkg_workdir=$pkg_vendor_dir/..
    cd $pkg_workdir
    pkg_tarball=`basename $pkg_tarball_url`
    echo "- wget $pkg_tarball_url"
    wget $pkg_tarball_url
    pkg_checksum=`basename $pkg_checksum_url`
    echo "- wget $pkg_checksum_url"
    wget $pkg_checksum_url
    echo "- signify-openbsd -C -x $pkg_checksum -p $pkg_signify_key $pkg_tarball"
    signify-openbsd -C -x $pkg_checksum -p $pkg_signify_key $pkg_tarball
    echo "- tar -xzf $pkg_tarball"
    tar -xzf $pkg_tarball
    pkg_extracted_name=`echo $pkg_tarball | sed 's/\.tar.gz$//g'`
    mv $pkg_extracted_name $pkg_name
else
    echo "FATAL: do not know how to fetch dependency" 1>&2
    exit 1
fi
cd $pkg_rootdir
git add $pkg_vendor_dir
git commit -am "$pkg_name: import pristine from ${pkg_vendor_src}"
