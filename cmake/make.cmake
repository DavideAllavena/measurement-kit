# file generated by './build/cmake/autogen'; do not edit

# headers

install(
    DIRECTORY
    ${MK_ROOT}/include/
    DESTINATION
    ${CMAKE_INSTALL_INCLUDEDIR}
)

# libmeasurement_kit_objects

add_library(
    libmeasurement_kit_objects
    OBJECT
    ${MK_ROOT}/src/libmeasurement_kit/common/citrus_ctype.h
    ${MK_ROOT}/src/libmeasurement_kit/ext/http_parser.h
    ${MK_ROOT}/src/libmeasurement_kit/ext/tls_internal.h
    ${MK_ROOT}/src/libmeasurement_kit/common/citrus_utf8.c
    ${MK_ROOT}/src/libmeasurement_kit/ext/http_parser.c
    ${MK_ROOT}/src/libmeasurement_kit/ext/tls_verify.c
    ${MK_ROOT}/src/libmeasurement_kit/portable/strtonum.c
    ${MK_ROOT}/src/libmeasurement_kit/common/delegate.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/encoding.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/every.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/fapply.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/fcar.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/fcdr.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/fcompose.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/fmap.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/freverse.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/libevent_reactor.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/locked.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/maybe.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/mock.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/parallel.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/range.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/utils.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/worker.hpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/getaddrinfo_async.hpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/libevent_query.hpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/ping.hpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/system_resolver.hpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/utils.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ext/catch.hpp
    ${MK_ROOT}/src/libmeasurement_kit/http/request_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/http/response_parser.hpp
    ${MK_ROOT}/src/libmeasurement_kit/mlabns/mlabns_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/internal.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/measure_speed.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/messages_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/protocol_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/run_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/test_c2s_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/test_meta_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/test_s2c_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/utils.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/builtin_ca_bundle.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/connect.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/connect_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/emitter.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/evbuffer.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/libevent_emitter.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/libssl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/socks5.hpp
    ${MK_ROOT}/src/libmeasurement_kit/net/utils.hpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/runnable.hpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/utils.hpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/utils_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/neubot/dash_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/bouncer_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/collector_client_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/constants.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/http_header_field_manipulation.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/orchestrate_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/resources_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/utils.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/utils_impl.hpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/whatsapp.hpp
    ${MK_ROOT}/src/libmeasurement_kit/common/encoding_base64.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/encoding_utf8.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/error.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/every.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/json.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/logger.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/platform.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/reactor.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/utils.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/version.cpp
    ${MK_ROOT}/src/libmeasurement_kit/common/worker.cpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/query.cpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/query_class.cpp
    ${MK_ROOT}/src/libmeasurement_kit/dns/query_type.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ext/sole.cpp
    ${MK_ROOT}/src/libmeasurement_kit/http/parse_url.cpp
    ${MK_ROOT}/src/libmeasurement_kit/http/request.cpp
    ${MK_ROOT}/src/libmeasurement_kit/http/response_parser.cpp
    ${MK_ROOT}/src/libmeasurement_kit/mlabns/mlabns.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/messages.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/protocol.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/run.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/test_c2s.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/test_meta.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/test_s2c.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ndt/utils.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/buffer.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/builtin_ca_bundle.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/connect.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/emitter.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/socks5.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/transport.cpp
    ${MK_ROOT}/src/libmeasurement_kit/net/utils.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/base_test.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/captive_portal.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/dash.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/dns_injection.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/facebook_messenger.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/http_header_field_manipulation.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/http_invalid_request_line.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/meek_fronted_requests.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/multi_ndt.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/ndt.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/runnable.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/tcp_connect.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/telegram.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/utils.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/web_connectivity.cpp
    ${MK_ROOT}/src/libmeasurement_kit/nettests/whatsapp.cpp
    ${MK_ROOT}/src/libmeasurement_kit/neubot/dash.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/bouncer.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/captive_portal.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/collector_client.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/dns_injection.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/facebook_messenger.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/http_header_field_manipulation.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/http_invalid_request_line.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/meek_fronted_requests.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/orchestrate.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/resources.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/tcp_connect.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/telegram.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/templates.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/utils.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/web_connectivity.cpp
    ${MK_ROOT}/src/libmeasurement_kit/ooni/whatsapp.cpp
    ${MK_ROOT}/src/libmeasurement_kit/report/base_reporter.cpp
    ${MK_ROOT}/src/libmeasurement_kit/report/entry.cpp
    ${MK_ROOT}/src/libmeasurement_kit/report/file_reporter.cpp
    ${MK_ROOT}/src/libmeasurement_kit/report/ooni_reporter.cpp
    ${MK_ROOT}/src/libmeasurement_kit/report/report.cpp
    ${MK_ROOT}/src/libmeasurement_kit/traceroute/android.cpp
    ${MK_ROOT}/src/libmeasurement_kit/traceroute/interface.cpp
)

set_target_properties(
    libmeasurement_kit_objects
    PROPERTIES
    POSITION_INDEPENDENT_CODE
    ON
)

target_compile_definitions(
    libmeasurement_kit_objects
    PUBLIC
    -DMK_BUILD_DLL
)

# libmeasurement_kit_static

add_library(
    libmeasurement_kit_static
    STATIC
    $<TARGET_OBJECTS:libmeasurement_kit_objects>
)

set_target_properties(
    libmeasurement_kit_static
    PROPERTIES
    OUTPUT_NAME
    "measurement_kit_static"
)

install(
    TARGETS
    libmeasurement_kit_static
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
)

# libmeasurement_kit

add_library(
    libmeasurement_kit
    SHARED
    $<TARGET_OBJECTS:libmeasurement_kit_objects>
)

set_target_properties(
    libmeasurement_kit
    PROPERTIES
    OUTPUT_NAME
    "measurement_kit"
)

target_link_libraries(
    libmeasurement_kit
    ${MK_LIBS}
)

install(
    TARGETS
    libmeasurement_kit
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin
)

# measurement_kit

if (${MK_BUILD_BINARIES})

    add_executable(
        measurement_kit
        ${MK_ROOT}/src/measurement_kit/portable/_getopt.h
        ${MK_ROOT}/src/measurement_kit/portable/err.h
        ${MK_ROOT}/src/measurement_kit/portable/getopt.h
        ${MK_ROOT}/src/measurement_kit/portable/unistd.h
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/src/measurement_kit/cmdline.hpp
        ${MK_ROOT}/src/measurement_kit/cmd/captive_portal.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/dash.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/dns_injection.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/facebook_messenger.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/http_header_field_manipulation.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/http_invalid_request_line.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/meek_fronted_requests.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/multi_ndt.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/ndt.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/tcp_connect.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/telegram.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/web_connectivity.cpp
        ${MK_ROOT}/src/measurement_kit/cmd/whatsapp.cpp
        ${MK_ROOT}/src/measurement_kit/main.cpp
        ${MK_ROOT}/src/measurement_kit/utils.cpp
    )

    target_link_libraries(
        measurement_kit
        libmeasurement_kit
        ${MK_LIBS}
    )

    target_compile_definitions(
        measurement_kit
        PUBLIC
        -DMK_USE_DLL
    )

    install(
        TARGETS
        measurement_kit
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin
    )

endif (${MK_BUILD_BINARIES})

# example

if (${MK_BUILD_EXAMPLES})

    ## example/common/fapply

    add_executable(
        example_common_fapply
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/common/fapply.cpp
    )

    set_target_properties(
        example_common_fapply
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/common
    )

    target_link_libraries(
        example_common_fapply
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/common/fcompose

    add_executable(
        example_common_fcompose
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/common/fcompose.cpp
    )

    set_target_properties(
        example_common_fcompose
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/common
    )

    target_link_libraries(
        example_common_fcompose
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/dns/ping

    add_executable(
        example_dns_ping
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/dns/ping.cpp
    )

    set_target_properties(
        example_dns_ping
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/dns
    )

    target_link_libraries(
        example_dns_ping
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/dns/query

    add_executable(
        example_dns_query
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/dns/query.cpp
    )

    set_target_properties(
        example_dns_query
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/dns
    )

    target_link_libraries(
        example_dns_query
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/http/request

    add_executable(
        example_http_request
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/http/request.cpp
    )

    set_target_properties(
        example_http_request
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/http
    )

    target_link_libraries(
        example_http_request
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/mlabns/query

    add_executable(
        example_mlabns_query
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/mlabns/query.cpp
    )

    set_target_properties(
        example_mlabns_query
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/mlabns
    )

    target_link_libraries(
        example_mlabns_query
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/net/connect

    add_executable(
        example_net_connect
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/net/connect.cpp
    )

    set_target_properties(
        example_net_connect
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/net
    )

    target_link_libraries(
        example_net_connect
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/net/transport

    add_executable(
        example_net_transport
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/net/transport.cpp
    )

    set_target_properties(
        example_net_transport
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/net
    )

    target_link_libraries(
        example_net_transport
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/nettests/multithread

    add_executable(
        example_nettests_multithread
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/nettests/multithread.cpp
    )

    set_target_properties(
        example_nettests_multithread
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/nettests
    )

    target_link_libraries(
        example_nettests_multithread
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/nettests/simple

    add_executable(
        example_nettests_simple
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/nettests/simple.cpp
    )

    set_target_properties(
        example_nettests_simple
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/nettests
    )

    target_link_libraries(
        example_nettests_simple
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/ooni/oonireport

    add_executable(
        example_ooni_oonireport
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/ooni/oonireport.cpp
    )

    set_target_properties(
        example_ooni_oonireport
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/ooni
    )

    target_link_libraries(
        example_ooni_oonireport
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/ooni/ooniresources

    add_executable(
        example_ooni_ooniresources
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/ooni/ooniresources.cpp
    )

    set_target_properties(
        example_ooni_ooniresources
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/ooni
    )

    target_link_libraries(
        example_ooni_ooniresources
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    ## example/ooni/oorchestrate

    add_executable(
        example_ooni_oorchestrate
        ${MK_ROOT}/src/measurement_kit/portable/getopt_long.c
        ${MK_ROOT}/example/ooni/oorchestrate.cpp
    )

    set_target_properties(
        example_ooni_oorchestrate
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/example/ooni
    )

    target_link_libraries(
        example_ooni_oorchestrate
        libmeasurement_kit_static
        ${MK_LIBS}
    )

endif (${MK_BUILD_EXAMPLES})

# test

if (${MK_BUILD_TESTS})

    enable_testing()
    ## test/common/continuation

    add_executable(
        test_common_continuation
        ${MK_ROOT}/test/common/continuation.cpp
    )

    set_target_properties(
        test_common_continuation
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_continuation
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_continuation
        ${MK_ROOT}/test/common/continuation
    )

    ## test/common/delegate

    add_executable(
        test_common_delegate
        ${MK_ROOT}/test/common/delegate.cpp
    )

    set_target_properties(
        test_common_delegate
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_delegate
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_delegate
        ${MK_ROOT}/test/common/delegate
    )

    ## test/common/enable_shared_from_this

    add_executable(
        test_common_enable_shared_from_this
        ${MK_ROOT}/test/common/enable_shared_from_this.cpp
    )

    set_target_properties(
        test_common_enable_shared_from_this
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_enable_shared_from_this
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_enable_shared_from_this
        ${MK_ROOT}/test/common/enable_shared_from_this
    )

    ## test/common/encoding

    add_executable(
        test_common_encoding
        ${MK_ROOT}/test/common/encoding.cpp
    )

    set_target_properties(
        test_common_encoding
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_encoding
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_encoding
        ${MK_ROOT}/test/common/encoding
    )

    ## test/common/error

    add_executable(
        test_common_error
        ${MK_ROOT}/test/common/error.cpp
    )

    set_target_properties(
        test_common_error
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_error
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_error
        ${MK_ROOT}/test/common/error
    )

    ## test/common/error_or

    add_executable(
        test_common_error_or
        ${MK_ROOT}/test/common/error_or.cpp
    )

    set_target_properties(
        test_common_error_or
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_error_or
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_error_or
        ${MK_ROOT}/test/common/error_or
    )

    ## test/common/every

    add_executable(
        test_common_every
        ${MK_ROOT}/test/common/every.cpp
    )

    set_target_properties(
        test_common_every
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_every
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_every
        ${MK_ROOT}/test/common/every
    )

    ## test/common/fapply

    add_executable(
        test_common_fapply
        ${MK_ROOT}/test/common/fapply.cpp
    )

    set_target_properties(
        test_common_fapply
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_fapply
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_fapply
        ${MK_ROOT}/test/common/fapply
    )

    ## test/common/fcar

    add_executable(
        test_common_fcar
        ${MK_ROOT}/test/common/fcar.cpp
    )

    set_target_properties(
        test_common_fcar
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_fcar
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_fcar
        ${MK_ROOT}/test/common/fcar
    )

    ## test/common/fcdr

    add_executable(
        test_common_fcdr
        ${MK_ROOT}/test/common/fcdr.cpp
    )

    set_target_properties(
        test_common_fcdr
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_fcdr
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_fcdr
        ${MK_ROOT}/test/common/fcdr
    )

    ## test/common/fcompose

    add_executable(
        test_common_fcompose
        ${MK_ROOT}/test/common/fcompose.cpp
    )

    set_target_properties(
        test_common_fcompose
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_fcompose
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_fcompose
        ${MK_ROOT}/test/common/fcompose
    )

    ## test/common/fmap

    add_executable(
        test_common_fmap
        ${MK_ROOT}/test/common/fmap.cpp
    )

    set_target_properties(
        test_common_fmap
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_fmap
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_fmap
        ${MK_ROOT}/test/common/fmap
    )

    ## test/common/freverse

    add_executable(
        test_common_freverse
        ${MK_ROOT}/test/common/freverse.cpp
    )

    set_target_properties(
        test_common_freverse
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_freverse
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_freverse
        ${MK_ROOT}/test/common/freverse
    )

    ## test/common/json

    add_executable(
        test_common_json
        ${MK_ROOT}/test/common/json.cpp
    )

    set_target_properties(
        test_common_json
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_json
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_json
        ${MK_ROOT}/test/common/json
    )

    ## test/common/libevent_reactor

    add_executable(
        test_common_libevent_reactor
        ${MK_ROOT}/test/common/libevent_reactor.cpp
    )

    set_target_properties(
        test_common_libevent_reactor
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_libevent_reactor
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_libevent_reactor
        ${MK_ROOT}/test/common/libevent_reactor
    )

    ## test/common/locked

    add_executable(
        test_common_locked
        ${MK_ROOT}/test/common/locked.cpp
    )

    set_target_properties(
        test_common_locked
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_locked
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_locked
        ${MK_ROOT}/test/common/locked
    )

    ## test/common/logger

    add_executable(
        test_common_logger
        ${MK_ROOT}/test/common/logger.cpp
    )

    set_target_properties(
        test_common_logger
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_logger
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_logger
        ${MK_ROOT}/test/common/logger
    )

    ## test/common/maybe

    add_executable(
        test_common_maybe
        ${MK_ROOT}/test/common/maybe.cpp
    )

    set_target_properties(
        test_common_maybe
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_maybe
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_maybe
        ${MK_ROOT}/test/common/maybe
    )

    ## test/common/parallel

    add_executable(
        test_common_parallel
        ${MK_ROOT}/test/common/parallel.cpp
    )

    set_target_properties(
        test_common_parallel
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_parallel
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_parallel
        ${MK_ROOT}/test/common/parallel
    )

    ## test/common/range

    add_executable(
        test_common_range
        ${MK_ROOT}/test/common/range.cpp
    )

    set_target_properties(
        test_common_range
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_range
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_range
        ${MK_ROOT}/test/common/range
    )

    ## test/common/settings

    add_executable(
        test_common_settings
        ${MK_ROOT}/test/common/settings.cpp
    )

    set_target_properties(
        test_common_settings
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_settings
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_settings
        ${MK_ROOT}/test/common/settings
    )

    ## test/common/shared_ptr

    add_executable(
        test_common_shared_ptr
        ${MK_ROOT}/test/common/shared_ptr.cpp
    )

    set_target_properties(
        test_common_shared_ptr
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_shared_ptr
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_shared_ptr
        ${MK_ROOT}/test/common/shared_ptr
    )

    ## test/common/unique_ptr

    add_executable(
        test_common_unique_ptr
        ${MK_ROOT}/test/common/unique_ptr.cpp
    )

    set_target_properties(
        test_common_unique_ptr
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_unique_ptr
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_unique_ptr
        ${MK_ROOT}/test/common/unique_ptr
    )

    ## test/common/utils

    add_executable(
        test_common_utils
        ${MK_ROOT}/test/common/utils.cpp
    )

    set_target_properties(
        test_common_utils
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_utils
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_utils
        ${MK_ROOT}/test/common/utils
    )

    ## test/common/version

    add_executable(
        test_common_version
        ${MK_ROOT}/test/common/version.cpp
    )

    set_target_properties(
        test_common_version
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_version
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_version
        ${MK_ROOT}/test/common/version
    )

    ## test/common/worker

    add_executable(
        test_common_worker
        ${MK_ROOT}/test/common/worker.cpp
    )

    set_target_properties(
        test_common_worker
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/common
    )

    target_link_libraries(
        test_common_worker
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_common_worker
        ${MK_ROOT}/test/common/worker
    )

    ## test/dns/libevent_error

    add_executable(
        test_dns_libevent_error
        ${MK_ROOT}/test/dns/libevent_error.cpp
    )

    set_target_properties(
        test_dns_libevent_error
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/dns
    )

    target_link_libraries(
        test_dns_libevent_error
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_dns_libevent_error
        ${MK_ROOT}/test/dns/libevent_error
    )

    ## test/dns/ping

    add_executable(
        test_dns_ping
        ${MK_ROOT}/test/dns/ping.cpp
    )

    set_target_properties(
        test_dns_ping
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/dns
    )

    target_link_libraries(
        test_dns_ping
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_dns_ping
        ${MK_ROOT}/test/dns/ping
    )

    ## test/dns/query

    add_executable(
        test_dns_query
        ${MK_ROOT}/test/dns/query.cpp
    )

    set_target_properties(
        test_dns_query
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/dns
    )

    target_link_libraries(
        test_dns_query
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_dns_query
        ${MK_ROOT}/test/dns/query
    )

    ## test/dns/query_class

    add_executable(
        test_dns_query_class
        ${MK_ROOT}/test/dns/query_class.cpp
    )

    set_target_properties(
        test_dns_query_class
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/dns
    )

    target_link_libraries(
        test_dns_query_class
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_dns_query_class
        ${MK_ROOT}/test/dns/query_class
    )

    ## test/dns/query_type

    add_executable(
        test_dns_query_type
        ${MK_ROOT}/test/dns/query_type.cpp
    )

    set_target_properties(
        test_dns_query_type
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/dns
    )

    target_link_libraries(
        test_dns_query_type
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_dns_query_type
        ${MK_ROOT}/test/dns/query_type
    )

    ## test/dns/system_resolver

    add_executable(
        test_dns_system_resolver
        ${MK_ROOT}/test/dns/system_resolver.cpp
    )

    set_target_properties(
        test_dns_system_resolver
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/dns
    )

    target_link_libraries(
        test_dns_system_resolver
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_dns_system_resolver
        ${MK_ROOT}/test/dns/system_resolver
    )

    ## test/http/headers

    add_executable(
        test_http_headers
        ${MK_ROOT}/test/http/headers.cpp
    )

    set_target_properties(
        test_http_headers
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/http
    )

    target_link_libraries(
        test_http_headers
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_http_headers
        ${MK_ROOT}/test/http/headers
    )

    ## test/http/parse_url

    add_executable(
        test_http_parse_url
        ${MK_ROOT}/test/http/parse_url.cpp
    )

    set_target_properties(
        test_http_parse_url
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/http
    )

    target_link_libraries(
        test_http_parse_url
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_http_parse_url
        ${MK_ROOT}/test/http/parse_url
    )

    ## test/http/request

    add_executable(
        test_http_request
        ${MK_ROOT}/test/http/request.cpp
    )

    set_target_properties(
        test_http_request
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/http
    )

    target_link_libraries(
        test_http_request
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_http_request
        ${MK_ROOT}/test/http/request
    )

    ## test/http/response_parser

    add_executable(
        test_http_response_parser
        ${MK_ROOT}/test/http/response_parser.cpp
    )

    set_target_properties(
        test_http_response_parser
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/http
    )

    target_link_libraries(
        test_http_response_parser
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_http_response_parser
        ${MK_ROOT}/test/http/response_parser
    )

    ## test/mlabns/mlabns

    add_executable(
        test_mlabns_mlabns
        ${MK_ROOT}/test/mlabns/mlabns.cpp
    )

    set_target_properties(
        test_mlabns_mlabns
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/mlabns
    )

    target_link_libraries(
        test_mlabns_mlabns
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_mlabns_mlabns
        ${MK_ROOT}/test/mlabns/mlabns
    )

    ## test/ndt/measure_speed

    add_executable(
        test_ndt_measure_speed
        ${MK_ROOT}/test/ndt/measure_speed.cpp
    )

    set_target_properties(
        test_ndt_measure_speed
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_measure_speed
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_measure_speed
        ${MK_ROOT}/test/ndt/measure_speed
    )

    ## test/ndt/messages

    add_executable(
        test_ndt_messages
        ${MK_ROOT}/test/ndt/messages.cpp
    )

    set_target_properties(
        test_ndt_messages
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_messages
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_messages
        ${MK_ROOT}/test/ndt/messages
    )

    ## test/ndt/protocol

    add_executable(
        test_ndt_protocol
        ${MK_ROOT}/test/ndt/protocol.cpp
    )

    set_target_properties(
        test_ndt_protocol
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_protocol
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_protocol
        ${MK_ROOT}/test/ndt/protocol
    )

    ## test/ndt/run

    add_executable(
        test_ndt_run
        ${MK_ROOT}/test/ndt/run.cpp
    )

    set_target_properties(
        test_ndt_run
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_run
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_run
        ${MK_ROOT}/test/ndt/run
    )

    ## test/ndt/test_c2s

    add_executable(
        test_ndt_test_c2s
        ${MK_ROOT}/test/ndt/test_c2s.cpp
    )

    set_target_properties(
        test_ndt_test_c2s
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_test_c2s
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_test_c2s
        ${MK_ROOT}/test/ndt/test_c2s
    )

    ## test/ndt/test_meta

    add_executable(
        test_ndt_test_meta
        ${MK_ROOT}/test/ndt/test_meta.cpp
    )

    set_target_properties(
        test_ndt_test_meta
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_test_meta
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_test_meta
        ${MK_ROOT}/test/ndt/test_meta
    )

    ## test/ndt/test_s2c

    add_executable(
        test_ndt_test_s2c
        ${MK_ROOT}/test/ndt/test_s2c.cpp
    )

    set_target_properties(
        test_ndt_test_s2c
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ndt
    )

    target_link_libraries(
        test_ndt_test_s2c
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ndt_test_s2c
        ${MK_ROOT}/test/ndt/test_s2c
    )

    ## test/net/buffer

    add_executable(
        test_net_buffer
        ${MK_ROOT}/test/net/buffer.cpp
    )

    set_target_properties(
        test_net_buffer
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_buffer
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_buffer
        ${MK_ROOT}/test/net/buffer
    )

    ## test/net/builtin_ca_bundle

    add_executable(
        test_net_builtin_ca_bundle
        ${MK_ROOT}/test/net/builtin_ca_bundle.cpp
    )

    set_target_properties(
        test_net_builtin_ca_bundle
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_builtin_ca_bundle
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_builtin_ca_bundle
        ${MK_ROOT}/test/net/builtin_ca_bundle
    )

    ## test/net/connect

    add_executable(
        test_net_connect
        ${MK_ROOT}/test/net/connect.cpp
    )

    set_target_properties(
        test_net_connect
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_connect
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_connect
        ${MK_ROOT}/test/net/connect
    )

    ## test/net/emitter

    add_executable(
        test_net_emitter
        ${MK_ROOT}/test/net/emitter.cpp
    )

    set_target_properties(
        test_net_emitter
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_emitter
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_emitter
        ${MK_ROOT}/test/net/emitter
    )

    ## test/net/evbuffer

    add_executable(
        test_net_evbuffer
        ${MK_ROOT}/test/net/evbuffer.cpp
    )

    set_target_properties(
        test_net_evbuffer
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_evbuffer
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_evbuffer
        ${MK_ROOT}/test/net/evbuffer
    )

    ## test/net/libevent_emitter

    add_executable(
        test_net_libevent_emitter
        ${MK_ROOT}/test/net/libevent_emitter.cpp
    )

    set_target_properties(
        test_net_libevent_emitter
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_libevent_emitter
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_libevent_emitter
        ${MK_ROOT}/test/net/libevent_emitter
    )

    ## test/net/libssl

    add_executable(
        test_net_libssl
        ${MK_ROOT}/test/net/libssl.cpp
    )

    set_target_properties(
        test_net_libssl
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_libssl
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_libssl
        ${MK_ROOT}/test/net/libssl
    )

    ## test/net/socks5

    add_executable(
        test_net_socks5
        ${MK_ROOT}/test/net/socks5.cpp
    )

    set_target_properties(
        test_net_socks5
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_socks5
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_socks5
        ${MK_ROOT}/test/net/socks5
    )

    ## test/net/transport

    add_executable(
        test_net_transport
        ${MK_ROOT}/test/net/transport.cpp
    )

    set_target_properties(
        test_net_transport
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_transport
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_transport
        ${MK_ROOT}/test/net/transport
    )

    ## test/net/utils

    add_executable(
        test_net_utils
        ${MK_ROOT}/test/net/utils.cpp
    )

    set_target_properties(
        test_net_utils
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/net
    )

    target_link_libraries(
        test_net_utils
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_net_utils
        ${MK_ROOT}/test/net/utils
    )

    ## test/nettests/captive_portal

    add_executable(
        test_nettests_captive_portal
        ${MK_ROOT}/test/nettests/captive_portal.cpp
    )

    set_target_properties(
        test_nettests_captive_portal
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_captive_portal
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_captive_portal
        ${MK_ROOT}/test/nettests/captive_portal
    )

    ## test/nettests/dash

    add_executable(
        test_nettests_dash
        ${MK_ROOT}/test/nettests/dash.cpp
    )

    set_target_properties(
        test_nettests_dash
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_dash
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_dash
        ${MK_ROOT}/test/nettests/dash
    )

    ## test/nettests/dns_injection

    add_executable(
        test_nettests_dns_injection
        ${MK_ROOT}/test/nettests/dns_injection.cpp
    )

    set_target_properties(
        test_nettests_dns_injection
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_dns_injection
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_dns_injection
        ${MK_ROOT}/test/nettests/dns_injection
    )

    ## test/nettests/facebook_messenger

    add_executable(
        test_nettests_facebook_messenger
        ${MK_ROOT}/test/nettests/facebook_messenger.cpp
    )

    set_target_properties(
        test_nettests_facebook_messenger
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_facebook_messenger
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_facebook_messenger
        ${MK_ROOT}/test/nettests/facebook_messenger
    )

    ## test/nettests/http_header_field_manipulation

    add_executable(
        test_nettests_http_header_field_manipulation
        ${MK_ROOT}/test/nettests/http_header_field_manipulation.cpp
    )

    set_target_properties(
        test_nettests_http_header_field_manipulation
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_http_header_field_manipulation
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_http_header_field_manipulation
        ${MK_ROOT}/test/nettests/http_header_field_manipulation
    )

    ## test/nettests/http_invalid_request_line

    add_executable(
        test_nettests_http_invalid_request_line
        ${MK_ROOT}/test/nettests/http_invalid_request_line.cpp
    )

    set_target_properties(
        test_nettests_http_invalid_request_line
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_http_invalid_request_line
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_http_invalid_request_line
        ${MK_ROOT}/test/nettests/http_invalid_request_line
    )

    ## test/nettests/meek_fronted_requests

    add_executable(
        test_nettests_meek_fronted_requests
        ${MK_ROOT}/test/nettests/meek_fronted_requests.cpp
    )

    set_target_properties(
        test_nettests_meek_fronted_requests
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_meek_fronted_requests
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_meek_fronted_requests
        ${MK_ROOT}/test/nettests/meek_fronted_requests
    )

    ## test/nettests/multi_ndt

    add_executable(
        test_nettests_multi_ndt
        ${MK_ROOT}/test/nettests/multi_ndt.cpp
    )

    set_target_properties(
        test_nettests_multi_ndt
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_multi_ndt
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_multi_ndt
        ${MK_ROOT}/test/nettests/multi_ndt
    )

    ## test/nettests/ndt

    add_executable(
        test_nettests_ndt
        ${MK_ROOT}/test/nettests/ndt.cpp
    )

    set_target_properties(
        test_nettests_ndt
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_ndt
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_ndt
        ${MK_ROOT}/test/nettests/ndt
    )

    ## test/nettests/runnable

    add_executable(
        test_nettests_runnable
        ${MK_ROOT}/test/nettests/runnable.cpp
    )

    set_target_properties(
        test_nettests_runnable
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_runnable
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_runnable
        ${MK_ROOT}/test/nettests/runnable
    )

    ## test/nettests/tcp_connect

    add_executable(
        test_nettests_tcp_connect
        ${MK_ROOT}/test/nettests/tcp_connect.cpp
    )

    set_target_properties(
        test_nettests_tcp_connect
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_tcp_connect
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_tcp_connect
        ${MK_ROOT}/test/nettests/tcp_connect
    )

    ## test/nettests/telegram

    add_executable(
        test_nettests_telegram
        ${MK_ROOT}/test/nettests/telegram.cpp
    )

    set_target_properties(
        test_nettests_telegram
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_telegram
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_telegram
        ${MK_ROOT}/test/nettests/telegram
    )

    ## test/nettests/utils

    add_executable(
        test_nettests_utils
        ${MK_ROOT}/test/nettests/utils.cpp
    )

    set_target_properties(
        test_nettests_utils
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_utils
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_utils
        ${MK_ROOT}/test/nettests/utils
    )

    ## test/nettests/web_connectivity

    add_executable(
        test_nettests_web_connectivity
        ${MK_ROOT}/test/nettests/web_connectivity.cpp
    )

    set_target_properties(
        test_nettests_web_connectivity
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_web_connectivity
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_web_connectivity
        ${MK_ROOT}/test/nettests/web_connectivity
    )

    ## test/nettests/whatsapp

    add_executable(
        test_nettests_whatsapp
        ${MK_ROOT}/test/nettests/whatsapp.cpp
    )

    set_target_properties(
        test_nettests_whatsapp
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/nettests
    )

    target_link_libraries(
        test_nettests_whatsapp
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_nettests_whatsapp
        ${MK_ROOT}/test/nettests/whatsapp
    )

    ## test/ooni/bouncer

    add_executable(
        test_ooni_bouncer
        ${MK_ROOT}/test/ooni/bouncer.cpp
    )

    set_target_properties(
        test_ooni_bouncer
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_bouncer
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_bouncer
        ${MK_ROOT}/test/ooni/bouncer
    )

    ## test/ooni/collector_client

    add_executable(
        test_ooni_collector_client
        ${MK_ROOT}/test/ooni/collector_client.cpp
    )

    set_target_properties(
        test_ooni_collector_client
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_collector_client
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_collector_client
        ${MK_ROOT}/test/ooni/collector_client
    )

    ## test/ooni/orchestrate

    add_executable(
        test_ooni_orchestrate
        ${MK_ROOT}/test/ooni/orchestrate.cpp
    )

    set_target_properties(
        test_ooni_orchestrate
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_orchestrate
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_orchestrate
        ${MK_ROOT}/test/ooni/orchestrate
    )

    ## test/ooni/resources

    add_executable(
        test_ooni_resources
        ${MK_ROOT}/test/ooni/resources.cpp
    )

    set_target_properties(
        test_ooni_resources
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_resources
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_resources
        ${MK_ROOT}/test/ooni/resources
    )

    ## test/ooni/templates

    add_executable(
        test_ooni_templates
        ${MK_ROOT}/test/ooni/templates.cpp
    )

    set_target_properties(
        test_ooni_templates
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_templates
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_templates
        ${MK_ROOT}/test/ooni/templates
    )

    ## test/ooni/utils

    add_executable(
        test_ooni_utils
        ${MK_ROOT}/test/ooni/utils.cpp
    )

    set_target_properties(
        test_ooni_utils
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_utils
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_utils
        ${MK_ROOT}/test/ooni/utils
    )

    ## test/ooni/web_connectivity

    add_executable(
        test_ooni_web_connectivity
        ${MK_ROOT}/test/ooni/web_connectivity.cpp
    )

    set_target_properties(
        test_ooni_web_connectivity
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/ooni
    )

    target_link_libraries(
        test_ooni_web_connectivity
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_ooni_web_connectivity
        ${MK_ROOT}/test/ooni/web_connectivity
    )

    ## test/report/entry

    add_executable(
        test_report_entry
        ${MK_ROOT}/test/report/entry.cpp
    )

    set_target_properties(
        test_report_entry
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/report
    )

    target_link_libraries(
        test_report_entry
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_report_entry
        ${MK_ROOT}/test/report/entry
    )

    ## test/report/file_reporter

    add_executable(
        test_report_file_reporter
        ${MK_ROOT}/test/report/file_reporter.cpp
    )

    set_target_properties(
        test_report_file_reporter
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/report
    )

    target_link_libraries(
        test_report_file_reporter
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_report_file_reporter
        ${MK_ROOT}/test/report/file_reporter
    )

    ## test/report/report

    add_executable(
        test_report_report
        ${MK_ROOT}/test/report/report.cpp
    )

    set_target_properties(
        test_report_report
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/report
    )

    target_link_libraries(
        test_report_report
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_report_report
        ${MK_ROOT}/test/report/report
    )

    ## test/traceroute/android

    add_executable(
        test_traceroute_android
        ${MK_ROOT}/test/traceroute/android.cpp
    )

    set_target_properties(
        test_traceroute_android
        PROPERTIES
        EXECUTABLE_OUTPUT_DIRECTORY
        ${MK_ROOT}/test/traceroute
    )

    target_link_libraries(
        test_traceroute_android
        libmeasurement_kit_static
        ${MK_LIBS}
    )

    add_test(
        test_traceroute_android
        ${MK_ROOT}/test/traceroute/android
    )

endif (${MK_BUILD_TESTS})

